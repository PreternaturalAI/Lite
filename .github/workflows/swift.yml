# This workflow will build a Swift project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-swift

name: Build all  platforms

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * *
    
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build_and_test:
    name: ${{ matrix.command }} on  ${{ matrix.platform }} (xcode ${{ matrix.xcode }}, ${{ matrix.macos }})
    runs-on: ${{ matrix.macos }} 
    strategy:
      fail-fast: false
      matrix:
        xcode: ['latest']
        macos: ['macos-14']
        scheme: ['Lite']
        command: ['build']
        platform: ['macOS'] # ADD 'iOS', 'tvOS', 'watchOS'
    steps:
    - name: Switch xcode to ${{ matrix.xcode }}
      uses: maxim-lobanov/setup-xcode@v1.5.1
      with:
        xcode-version: ${{ matrix.xcode }}
    - name: Double-check macOS version (${{ matrix.macos }})
      run: sw_vers
    - name: Code Checkout
      uses: actions/checkout@v2
    - name: Check xcodebuild version
      run: xcodebuild -version
    - name: Check xcode embedded SDKs
      run: xcodebuild -showsdks
    - name: Show buildable schemes
      run: xcodebuild -list
    - name: Show eligible build destinations for ${{ matrix.scheme }}
      run: xcodebuild -showdestinations -scheme ${{ matrix.scheme }}
    - name: Skip Macro Validation
      run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
    - uses: mxcl/xcodebuild@v2.0.0
      with:
        platform: ${{ matrix.platform }}
        scheme: ${{ matrix.scheme }}
        action: ${{ matrix.command }} 
        code-coverage: true
        verbosity: xcpretty
        upload-logs: always
        
  generate_and_deploy_docs:
    name: Build Documentation
    runs-on: ${{ matrix.macos }} 
    strategy:
      fail-fast: false
      matrix:
        xcode: ['latest']
        macos: ['macos-14']
        scheme: ['Lite']
        command: ['docbuild']
        platform: ['macOS'] # ADD 'iOS', 'tvOS', 'watchOS'
    steps:
      - name: Switch xcode to ${{ matrix.xcode }}
        uses: maxim-lobanov/setup-xcode@v1.5.1
        with:
          xcode-version: ${{ matrix.xcode }}
      - name: Double-check macOS version (${{ matrix.macos }})
        run: sw_vers
      - name: Code Checkout
        uses: actions/checkout@v2
      - name: Check xcodebuild version
        run: xcodebuild -version
      - name: Check xcode embedded SDKs
        run: xcodebuild -showsdks
      - name: Show buildable schemes
        run: xcodebuild -list
      - name: Show eligible build destinations for ${{ matrix.scheme }}
        run: xcodebuild -showdestinations -scheme ${{ matrix.scheme }}
      - name: Skip Macro Validation
        run: defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: Build DocC
        run: |
          swift package resolve;
          
          xcodebuild docbuild -scheme Lite -derivedDataPath /tmp/docbuild -destination "generic/platform=macOS, name=Any Mac"
          
          echo "Archiving documentation..."
          
          $(xcrun --find docc) process-archive \
            transform-for-static-hosting /tmp/docbuild/Build/Products/Debug-iphonesimulator/Lite.doccarchive \
            --output-path docs \
            --hosting-base-path '';
            
          echo "** Archived documentation**"
          
          echo "<script>window.location.href += \"tutorials/table-of-contents\"</script>" > docs/index.html;

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload only docs directory
          path: 'docs'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

